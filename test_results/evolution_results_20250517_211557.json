{
  "metrics": {
    "total_tests": 2,
    "successful_tests": 2,
    "failed_tests": 0,
    "total_duration": 3.7375802993774414,
    "timestamp": "2025-05-17T21:15:57.360237",
    "test_metrics": {
      "timestamp": 1747487757.0690136,
      "tests_passed": 4,
      "code_analysis": {
        "quality_score": 19.0,
        "issues_count": 4
      },
      "code_optimization": {
        "strategies_tested": 4,
        "improvements": {
          "complexity": 0.0,
          "quality_score": 84.21052631578947,
          "issues_count": 75.0
        }
      },
      "module_generation": {
        "success": true,
        "code_size": 4996
      }
    }
  },
  "results": [
    {
      "test_file": "test_evolution_comprehensive.py",
      "success": true,
      "duration": 3.5852267742156982,
      "return_code": 0,
      "stdout": "",
      "stderr": "2025-05-17 21:15:53,791 - EvolutionCompTest - INFO - \u5f00\u59cb\u6267\u884cGHOST AGI\u81ea\u4e3b\u8fdb\u5316\u80fd\u529b\u5168\u9762\u6d4b\u8bd5\n2025-05-17 21:15:53,793 - EvolutionCompTest - INFO - === \u5f00\u59cb\u6d4b\u8bd5\u5168\u9762\u4ee3\u7801\u5206\u6790\u529f\u80fd ===\n2025-05-17 21:15:53,793 - CodeGenerator - INFO - \u4ee3\u7801\u751f\u6210\u5668\u521d\u59cb\u5316\u5b8c\u6210\n2025-05-17 21:15:53,798 - EvolutionCompTest - INFO - \u4ee3\u7801\u8d28\u91cf\u5f97\u5206: 19.00/100\n2025-05-17 21:15:53,798 - EvolutionCompTest - INFO - \u4ee3\u7801\u590d\u6742\u5ea6: 21\n2025-05-17 21:15:53,798 - EvolutionCompTest - INFO - \u53d1\u73b0 4 \u4e2a\u95ee\u9898:\n2025-05-17 21:15:53,798 - EvolutionCompTest - INFO - - [info] \u7c7b\u540d 'badImplementation' \u4e0d\u7b26\u5408\u547d\u540d\u89c4\u8303 (\u5e94\u4f7f\u7528\u9a7c\u5cf0\u547d\u540d\u6cd5)\n2025-05-17 21:15:53,799 - EvolutionCompTest - INFO - - [info] \u51fd\u6570\u540d 'addItem' \u4e0d\u7b26\u5408\u547d\u540d\u89c4\u8303 (\u5e94\u4f7f\u7528\u5c0f\u5199\u5b57\u6bcd\u548c\u4e0b\u5212\u7ebf)\n2025-05-17 21:15:53,799 - EvolutionCompTest - INFO - - [info] \u51fd\u6570\u540d 'PROCESS_DATA' \u4e0d\u7b26\u5408\u547d\u540d\u89c4\u8303 (\u5e94\u4f7f\u7528\u5c0f\u5199\u5b57\u6bcd\u548c\u4e0b\u5212\u7ebf)\n2025-05-17 21:15:53,799 - EvolutionCompTest - INFO - - [medium] \u6587\u6863\u5b8c\u6574\u6027\u8f83\u4f4e (0.0%)\n2025-05-17 21:15:53,799 - EvolutionCompTest - INFO - \u4ee3\u7801\u5206\u6790\u529f\u80fd\u6d4b\u8bd5\u901a\u8fc7\n2025-05-17 21:15:53,799 - EvolutionCompTest - INFO - \n=== \u5f00\u59cb\u6d4b\u8bd5\u4ee3\u7801\u4f18\u5316\u529f\u80fd ===\n2025-05-17 21:15:53,799 - CodeGenerator - INFO - \u4ee3\u7801\u751f\u6210\u5668\u521d\u59cb\u5316\u5b8c\u6210\n2025-05-17 21:15:53,813 - EvolutionCompTest - INFO - Readability \u4f18\u5316\u7b56\u7565:\n2025-05-17 21:15:53,813 - EvolutionCompTest - INFO - - \u5e94\u7528\u4e86 2 \u4e2a\u4f18\u5316\n2025-05-17 21:15:53,813 - EvolutionCompTest - INFO -   \\u2022 naming: \u6539\u8fdb\u53d8\u91cf\u548c\u51fd\u6570\u547d\u540d\n2025-05-17 21:15:53,814 - EvolutionCompTest - INFO -   \\u2022 structure: \u6539\u8fdb\u4ee3\u7801\u7ed3\u6784\n2025-05-17 21:15:53,814 - EvolutionCompTest - INFO - - complexity: 0.00%\n2025-05-17 21:15:53,814 - EvolutionCompTest - INFO - - quality_score: 84.21%\n2025-05-17 21:15:53,814 - EvolutionCompTest - INFO - - issues_count: 75.00%\n2025-05-17 21:15:53,825 - EvolutionCompTest - INFO - Performance \u4f18\u5316\u7b56\u7565: no_change\n2025-05-17 21:15:53,841 - EvolutionCompTest - INFO - Maintenance \u4f18\u5316\u7b56\u7565:\n2025-05-17 21:15:53,841 - EvolutionCompTest - INFO - - \u5e94\u7528\u4e86 2 \u4e2a\u4f18\u5316\n2025-05-17 21:15:53,841 - EvolutionCompTest - INFO -   \\u2022 naming: \u6539\u8fdb\u53d8\u91cf\u548c\u51fd\u6570\u547d\u540d\n2025-05-17 21:15:53,841 - EvolutionCompTest - INFO -   \\u2022 structure: \u6539\u8fdb\u4ee3\u7801\u7ed3\u6784\n2025-05-17 21:15:53,841 - EvolutionCompTest - INFO - - complexity: 0.00%\n2025-05-17 21:15:53,841 - EvolutionCompTest - INFO - - quality_score: 84.21%\n2025-05-17 21:15:53,841 - EvolutionCompTest - INFO - - issues_count: 75.00%\n2025-05-17 21:15:53,861 - EvolutionCompTest - INFO - Security \u4f18\u5316\u7b56\u7565: no_change\n2025-05-17 21:15:53,900 - EvolutionCompTest - INFO - \n\u7efc\u5408\u4f18\u5316\u7ed3\u679c:\n2025-05-17 21:15:53,900 - EvolutionCompTest - INFO - - \u5e94\u7528\u4e86 2 \u4e2a\u4f18\u5316\n2025-05-17 21:15:53,900 - EvolutionCompTest - INFO - - \u4f18\u5316\u524d\u4ee3\u7801\u884c\u6570: 65\n2025-05-17 21:15:53,902 - EvolutionCompTest - INFO - - \u4f18\u5316\u540e\u4ee3\u7801\u884c\u6570: 66\n2025-05-17 21:15:53,902 - EvolutionCompTest - INFO - \u4f18\u5316\u540e\u7684\u4ee3\u7801\u5df2\u4fdd\u5b58\u5230 optimized_code_result.py\n2025-05-17 21:15:53,902 - EvolutionCompTest - INFO - \u4ee3\u7801\u4f18\u5316\u529f\u80fd\u6d4b\u8bd5\u901a\u8fc7\n2025-05-17 21:15:53,903 - EvolutionCompTest - INFO - \n=== \u5f00\u59cb\u6d4b\u8bd5\u6a21\u5757\u751f\u6210\u529f\u80fd ===\n2025-05-17 21:15:53,903 - CodeGenerator - INFO - \u4ee3\u7801\u751f\u6210\u5668\u521d\u59cb\u5316\u5b8c\u6210\n2025-05-17 21:15:53,903 - EvolutionCompTest - INFO - \u6a21\u5757 'data_processor' \u751f\u6210\u6210\u529f!\n2025-05-17 21:15:53,905 - EvolutionCompTest - INFO - \u6a21\u5757\u4ee3\u7801\u5df2\u4fdd\u5b58\u5230 data_processor.py\n2025-05-17 21:15:53,905 - EvolutionCompTest - INFO - \u6a21\u5757\u751f\u6210\u529f\u80fd\u6d4b\u8bd5\u901a\u8fc7\n2025-05-17 21:15:53,905 - EvolutionCompTest - INFO - \n=== \u5f00\u59cb\u6d4b\u8bd5\u8fdb\u5316\u5f15\u64ce ===\n2025-05-17 21:15:53,905 - EvolutionEngine - INFO - \u8fdb\u5316\u5f15\u64ce\u521d\u59cb\u5316\u5b8c\u6210\n2025-05-17 21:15:53,905 - EvolutionCompTest - INFO - \u6d4b\u8bd5\u7cfb\u7edf\u7ed3\u6784\u5206\u6790...\n2025-05-17 21:15:53,905 - EvolutionEngine - INFO - \u5f00\u59cb\u5206\u6790\u7cfb\u7edf\u7ed3\u6784\n2025-05-17 21:15:54,622 - EvolutionCompTest - INFO - \u5206\u6790\u4e86 15 \u4e2a\u6a21\u5757\n2025-05-17 21:15:54,622 - EvolutionCompTest - INFO - \u603b\u4ee3\u7801\u5927\u5c0f: 418335 \u5b57\u8282\n2025-05-17 21:15:54,622 - EvolutionCompTest - INFO - \u590d\u6742\u5ea6\u70ed\u70b9\u6a21\u5757:\n2025-05-17 21:15:54,622 - EvolutionCompTest - INFO - - evolution/code_generator.py: \u590d\u6742\u5ea6 584\n2025-05-17 21:15:54,623 - EvolutionCompTest - INFO - - memory/memory_system.py: \u590d\u6742\u5ea6 434\n2025-05-17 21:15:54,623 - EvolutionCompTest - INFO - - reasoning/planning.py: \u590d\u6742\u5ea6 284\n2025-05-17 21:15:54,623 - EvolutionCompTest - INFO - \n\u6d4b\u8bd5\u4f18\u5316\u5efa\u8bae\u751f\u6210...\n2025-05-17 21:15:54,623 - EvolutionCompTest - INFO - \u6ca1\u6709\u751f\u6210\u4f18\u5316\u5efa\u8bae\n2025-05-17 21:15:54,623 - EvolutionCompTest - INFO - \n\u6d4b\u8bd5\u8fdb\u5316\u8ba1\u5212\u751f\u6210...\n2025-05-17 21:15:54,623 - EvolutionEngine - INFO - \u6b63\u5728\u751f\u6210\u7cfb\u7edf\u8fdb\u5316\u8ba1\u5212\n2025-05-17 21:15:54,623 - EvolutionEngine - INFO - \u5f00\u59cb\u5206\u6790\u7cfb\u7edf\u7ed3\u6784\n2025-05-17 21:15:55,870 - faiss.loader - INFO - Loading faiss with AVX512 support.\n2025-05-17 21:15:55,870 - faiss.loader - INFO - Could not load library with AVX512 support due to:\nModuleNotFoundError(\"No module named 'faiss.swigfaiss_avx512'\")\n2025-05-17 21:15:55,870 - faiss.loader - INFO - Loading faiss with AVX2 support.\n2025-05-17 21:15:55,904 - faiss.loader - INFO - Successfully loaded faiss with AVX2 support.\n2025-05-17 21:15:55,915 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.\n2025-05-17 21:15:57,069 - EvolutionEngine - ERROR - \u5206\u6790\u4ee3\u7801\u5931\u8d25: name 'VISION_AVAILABLE' is used prior to global declaration (multimodal.py, line 119)\n2025-05-17 21:15:57,069 - EvolutionEngine - ERROR - \u5206\u6790\u4ee3\u7801\u5931\u8d25: No module named 'agents/core_agent'\n2025-05-17 21:15:57,069 - EvolutionEngine - ERROR - \u5206\u6790\u4ee3\u7801\u5931\u8d25: No module named 'agents/meta_cognition'\n2025-05-17 21:15:57,069 - EvolutionEngine - ERROR - \u5206\u6790\u4ee3\u7801\u5931\u8d25: No module named 'memory/memory_system'\n2025-05-17 21:15:57,069 - EvolutionEngine - ERROR - \u5206\u6790\u4ee3\u7801\u5931\u8d25: No module named 'memory/vector_store'\n2025-05-17 21:15:57,069 - EvolutionEngine - ERROR - \u5206\u6790\u4ee3\u7801\u5931\u8d25: No module named 'reasoning/symbolic'\n2025-05-17 21:15:57,069 - EvolutionEngine - ERROR - \u5206\u6790\u4ee3\u7801\u5931\u8d25: No module named 'reasoning/planning'\n2025-05-17 21:15:57,069 - EvolutionEngine - ERROR - \u5206\u6790\u4ee3\u7801\u5931\u8d25: No module named 'tools/tool_executor'\n2025-05-17 21:15:57,069 - EvolutionEngine - ERROR - \u5206\u6790\u4ee3\u7801\u5931\u8d25: No module named 'utils/event_system'\n2025-05-17 21:15:57,069 - EvolutionEngine - ERROR - \u5206\u6790\u4ee3\u7801\u5931\u8d25: No module named 'utils/agent_scheduler'\n2025-05-17 21:15:57,069 - EvolutionEngine - ERROR - \u5206\u6790\u4ee3\u7801\u5931\u8d25: No module named 'perception/multimodal'\n2025-05-17 21:15:57,069 - EvolutionEngine - ERROR - \u5206\u6790\u4ee3\u7801\u5931\u8d25: No module named 'evolution/evolution_engine'\n2025-05-17 21:15:57,069 - EvolutionEngine - ERROR - \u5206\u6790\u4ee3\u7801\u5931\u8d25: No module named 'evolution/code_generator'\n2025-05-17 21:15:57,069 - EvolutionEngine - ERROR - \u5206\u6790\u4ee3\u7801\u5931\u8d25: No module named 'knowledge/knowledge_transfer'\n2025-05-17 21:15:57,069 - EvolutionEngine - ERROR - \u5206\u6790\u4ee3\u7801\u5931\u8d25: No module named 'learning/autonomous_learning'\n2025-05-17 21:15:57,069 - EvolutionCompTest - INFO - \u8fdb\u5316\u8ba1\u5212\u751f\u6210\u6210\u529f\uff0c\u8ba1\u5212ID: plan_1747487757\n2025-05-17 21:15:57,069 - EvolutionCompTest - INFO - \u4f18\u5316\u9879\u6570\u91cf: 15\n2025-05-17 21:15:57,069 - EvolutionCompTest - INFO - \u4f18\u5316\u7c7b\u578b\u5206\u5e03:\n2025-05-17 21:15:57,069 - EvolutionCompTest - INFO - - complexity: 15\u9879\n2025-05-17 21:15:57,069 - EvolutionCompTest - INFO - \u8fdb\u5316\u5f15\u64ce\u6d4b\u8bd5\u5b8c\u6210\n2025-05-17 21:15:57,069 - EvolutionCompTest - INFO - \n=== \u6240\u6709\u6d4b\u8bd5\u5df2\u6210\u529f\u5b8c\u6210 ===\n2025-05-17 21:15:57,069 - EvolutionCompTest - INFO - \u603b\u8017\u65f6: 3.28\u79d2\n2025-05-17 21:15:57,069 - EvolutionCompTest - INFO - \u6d4b\u8bd5\u62a5\u544a\u5df2\u4fdd\u5b58\u5230 evolution_test_report.json\n",
      "timestamp": "2025-05-17T21:15:57.207883"
    },
    {
      "test_file": "test_code_generator.py",
      "success": true,
      "duration": 0.15235352516174316,
      "return_code": 0,
      "stdout": "===== \u6d4b\u8bd5\u4ee3\u7801\u8d28\u91cf\u5206\u6790 =====\n\u4ee3\u7801\u8d28\u91cf\u5f97\u5206: 13.00/100\n\u4ee3\u7801\u590d\u6742\u5ea6: 11\n\u53ef\u7ef4\u62a4\u6027: 90.00/100\n\u6587\u6863\u5b8c\u6574\u6027: 0.00%\n\n\u53d1\u73b0\u7684\u95ee\u9898:\n- [info] \u51fd\u6570\u540d 'badFunction' \u4e0d\u7b26\u5408\u547d\u540d\u89c4\u8303 (\u5e94\u4f7f\u7528\u5c0f\u5199\u5b57\u6bcd\u548c\u4e0b\u5212\u7ebf)\n- [info] \u53d8\u91cf\u540d 'Result' \u4e0d\u7b26\u5408\u547d\u540d\u89c4\u8303 (\u5e94\u4f7f\u7528\u5c0f\u5199\u5b57\u6bcd\u548c\u4e0b\u5212\u7ebf)\n- [info] \u53d8\u91cf\u540d 'Result' \u4e0d\u7b26\u5408\u547d\u540d\u89c4\u8303 (\u5e94\u4f7f\u7528\u5c0f\u5199\u5b57\u6bcd\u548c\u4e0b\u5212\u7ebf)\n- [info] \u7c7b\u540d 'badClass' \u4e0d\u7b26\u5408\u547d\u540d\u89c4\u8303 (\u5e94\u4f7f\u7528\u9a7c\u5cf0\u547d\u540d\u6cd5)\n- [medium] \u53d1\u73b02\u5904\u53ef\u80fd\u9700\u8981\u5f02\u5e38\u5904\u7406\u7684\u4f4d\u7f6e\n- [medium] \u6587\u6863\u5b8c\u6574\u6027\u8f83\u4f4e (0.0%)\n\n\u6539\u8fdb\u5efa\u8bae:\n- [medium] \u6539\u8fdb\u547d\u540d\u89c4\u8303\uff0c\u4f7f\u7528\u66f4\u5177\u63cf\u8ff0\u6027\u7684\u6807\u8bc6\u7b26\n- [medium] \u4e3a\u5173\u952e\u64cd\u4f5c\u6dfb\u52a0\u5f02\u5e38\u5904\u7406\n- [medium] \u4e3a\u7c7b\u548c\u51fd\u6570\u6dfb\u52a0\u6587\u6863\u5b57\u7b26\u4e32\n\n\n===== \u6d4b\u8bd5\u4ee3\u7801\u81ea\u52a8\u4f18\u5316 =====\n\u4f18\u5316\u72b6\u6001: no_change\n\n\n===== \u6d4b\u8bd5\u6a21\u5757\u81ea\u52a8\u751f\u6210 =====\n\u6a21\u5757 'data_validator' \u751f\u6210\u6210\u529f\n\n\u751f\u6210\u7684\u4ee3\u7801:\n# -*- coding: utf-8 -*-\n\"\"\"\ndata_validator\n\n\u6570\u636e\u9a8c\u8bc1\u6a21\u5757\uff0c\u63d0\u4f9b\u5404\u79cd\u6570\u636e\u9a8c\u8bc1\u529f\u80fd\n\"\"\"\n\n# Author: GHOST AGI\n# Created: 2025-05-17 21:15:57\n\nimport re\nimport datetime\nfrom typing import Dict, List, Any, Optional, Union\n\ndef is_valid_phone(phone_number, country_code='CN'):\n    \"\"\"\u68c0\u67e5\u662f\u5426\u662f\u6709\u6548\u7684\u7535\u8bdd\u53f7\u7801\"\"\"\n\n    if country_code == 'CN':\n        # \u4e2d\u56fd\u624b\u673a\u53f7\u683c\u5f0f\n        pattern = r'^1[3-9]\\d{9}$'\n    elif country_code == 'US':\n        # \u7f8e\u56fd\u7535\u8bdd\u53f7\u7801\u683c\u5f0f\n        pattern = r'^\\+?1?\\s*\\(?\\d{3}\\)?[-\\s]?\\d{3}[-\\s]?\\d{4}$'\n    else:\n        # \u901a\u7528\u683c\u5f0f\n        pattern = r'^\\+?\\d{1,4}?[-\\s]?\\(?\\d{1,4}\\)?[-\\s]?\\d{1,9}$'\n    \n    return bool(re.match(pattern, phone_number))\n\ndef is_valid_ip(ip_address, version=4):\n    \"\"\"\u68c0\u67e5\u662f\u5426\u662f\u6709\u6548\u7684IP\u5730\u5740\"\"\"\n\n    if version == 4:\n        # IPv4 \u683c\u5f0f\n        pattern = r'^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'\n    elif version == 6:\n        # IPv6 \u683c\u5f0f (\u7b80\u5316\u7248)\n        pattern = r'^(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}$'\n    else:\n        return False\n    \n    return bool(re.match(pattern, ip_address))\n\nclass DataValidator:\n    \"\"\"\u6570\u636e\u9a8c\u8bc1\u5668\u7c7b\"\"\"\n\n    def __init__(self, strict_mode=False):\n        \"\"\"\u521d\u59cb\u5316\u9a8c\u8bc1\u5668\"\"\"\n\n        self.strict_mode = strict_mode\n        self.errors = []\n\n    def validate_email(self, email):\n        \"\"\"\u9a8c\u8bc1\u7535\u5b50\u90ae\u4ef6\u5730\u5740\"\"\"\n\n        pattern = r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$'\n        if not re.match(pattern, email):\n            error = f\"Invalid email format: {email}\"\n            self.errors.append(error)\n            return False\n        return True\n\n    def validate_date(self, date_str, format_str='%Y-%m-%d'):\n        \"\"\"\u9a8c\u8bc1\u65e5\u671f\u683c\u5f0f\"\"\"\n\n        try:\n            datetime.datetime.strptime(date_str, format_str)\n            return True\n        except ValueError:\n            error = f\"Invalid date format: {date_str}, expected format: {format_str}\"\n            self.errors.append(error)\n            return False\n\n    def get_errors(self):\n        \"\"\"\u83b7\u53d6\u9519\u8bef\u5217\u8868\"\"\"\n\n        return self.errors\n\n    def clear_errors(self):\n        \"\"\"\u6e05\u9664\u9519\u8bef\u5217\u8868\"\"\"\n\n        self.errors = []\n\n\n\n\n\n\u4ee3\u7801\u5df2\u4fdd\u5b58\u5230\u6587\u4ef6: generated_validator.py\n",
      "stderr": "",
      "timestamp": "2025-05-17T21:15:57.360237"
    }
  ]
}